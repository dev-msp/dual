@use "sass:string";
@use "@picocss/pico/scss/pico";
@use "@picocss/pico/scss/colors/utilities";

:root {
  --theme-darkest: var(--pico-color-azure-900);
  --theme-darker: var(--pico-color-azure-800);
  --theme-bg: var(--theme-darkest);
  --theme-fg: var(--pico-color-azure-100);

  @each $size in ( "1" "2" "3" "4" "5" "6" "7" "8" ) {
    --space-#{$size}: calc(var(--pico-spacing) * #{$size});
  }

  --pico-spacing: 0.4rem;
  --pico-background-color: var(--theme-bg);
  --pico-color: var(--theme-fg);
  --pico-font-size: 14px;
  --pico-border-radius: var(--space-2);
}

body {
  background-color: var(--theme-bg);
  color: var(--theme-fg);
  font-family: Inter, "Open Sans", "Helvetica Neue", sans-serif;
}

#root {
  width: 100vw;
  height: 100vh;
}

main {
  display: flex;
  flex-direction: column;
}

@media (width >= 480px) {
  h1 {
    max-width: none;
  }

  p {
    max-width: none;
  }
}

.app-container {
  display: grid;
  width: 87.5%;
  max-width: 1600px;
  height: 100%;
  padding-top: var(--space-4);
  margin: 0 auto;
  grid-auto-flow: column;
  grid-template-columns: 1fr;
  grid-template-rows: min-content 75% 1fr;

  @media screen and (width <= 1024px) {
    width: 100%;
  }
}

.list-container {
  overflow-y: scroll;
}

.order {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  align-items: center;
  justify-content: start;
  gap: var(--space-1);

  & [role="button"] {
    padding: 0;
    border: unset;
    background-color: unset;
  }

  & .option {
    padding: var(--space-1) var(--space-2);
    border: 1px var(--theme-fg) solid;
    border-radius: calc(var(--pico-border-radius) * 3);
  }
}

@mixin subgrid-inherit-cols {
  display: grid;
  grid-column: var(--subgrid-col-start) / -1;
  grid-template-columns: subgrid;
}

.data-table {
  --subgrid-col-start: 1;

  display: grid;

  @media screen and (width >= 1024px) {
    column-gap: var(--space-3);
  }

  .table-header {
    --subgrid-col-start: 2;

    @include subgrid-inherit-cols;

    position: sticky;
    z-index: 10;
    top: 0;
    height: min-content;

    [data-title] {
      font-weight: 700;
    }
  }

  .data-row {
    --subgrid-col-start: 1;

    @include subgrid-inherit-cols;

    column-gap: 1px;
    font-size: 0.9rem;

    .cell {
      padding: var(--space-1) var(--space-1);
      background-color: var(--theme-bg);
    }

    &:nth-child(even) .cell {
      background-color: color-mix(in srgb, var(--theme-bg) 90%, transparent 10%);
    }
  }

  &:not([data-grouped]) {
    [data-when-grouped] { display: none; }
    .table-header { --subgrid-col-start: 1; }
  }
}

[data-album-group] {
  --spacing: var(--space-3);

  @include subgrid-inherit-cols;

  margin-top: var(--spacing);
  column-gap: var(--spacing);

  &:first-child {
    margin-top: calc(var(--spacing) / 2);
  }

  @media screen and (width >= 1024px) {
    --spacing: var(--space-6);
  }

  .rows {
    --subgrid-col-start: 2;

    @include subgrid-inherit-cols;

    height: min-content;
    background-color: var(--theme-fg);
    grid-auto-rows: min-content;
    line-height: initial;

    .data-row {
      column-gap: 1px;
    }
  }

  .info {
    width: 100%;
    min-width: 120px;
    max-width: 300px;
    padding-bottom: var(--spacing);
    grid-column: 1;
  }

  .artwork {
    height: auto;
    border: var(--pico-color-gray-400);
    border-radius: var(--pico-border-radius);
    object-fit: cover;
  }

  .credits {
    width: 108%;
  }
}

.no-wrap {
  overflow: hidden;
  text-align: left;
  text-overflow: ellipsis;
  white-space: preserve nowrap;
}
